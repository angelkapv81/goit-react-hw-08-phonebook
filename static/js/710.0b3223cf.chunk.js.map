{"version":3,"file":"static/js/710.0b3223cf.chunk.js","mappings":"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","sources":["components/Phonebook/Form/Form.styled.jsx","components/Phonebook/Form/Form.jsx","store/filter/selectors.js","components/Phonebook/Search/Search.styled.jsx","components/Phonebook/Search/Search.jsx","components/Phonebook/Loader.jsx","components/Phonebook/Contacts/Contacts.styled.jsx","components/Phonebook/Contacts/Contacts.jsx","components/Phonebook/Phonebook.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsBlock = styled.div`\n  margin-top: 50px;\n`;\n\nexport const ContactPhonebook = styled.h1`\n  font-size: 70px;\n  font-weight: bold;\n  text-align: center;\n`;\nexport const ContactBook = styled.form`\n  margin: 50px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #f9f9f9;\n  border: 2px solid rgb(69, 65, 65);\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n  padding: 20px;\n  border-radius: 10px;\n  max-width: 500px;\n`;\n\nexport const ContactForm = styled.input`\n  margin-bottom: 10px;\n  padding: 10px;\n  font-size: 24px;\n  border: none;\n  background-color: #f1f1f1;\n  border-radius: 5px;\n  width: 100%;\n  &:focus,\n  :hover {\n    outline: none;\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3);\n    background-color: rgb(173, 255, 173);\n  }\n`;\n\nexport const ContactAdd = styled.button`\n  font-size: 24px;\n  border-radius: 5px;\n  padding: 5px;\n  &:focus,\n  :hover {\n    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n    background-color: color(rgb(242, 242, 242) 20%);\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'store/contacts/operations';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\nimport swal from 'sweetalert';\nimport {\n  ContactsBlock,\n  ContactPhonebook,\n  ContactBook,\n  ContactForm,\n  ContactAdd,\n} from './Form.styled';\nimport { nanoid } from 'nanoid';\n\n\n\nfunction Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (existingContact) {\n      swal('Error', 'Contact with the same name already exists', 'error');\n      reset();\n      return;\n    }\n\n    const phonePattern =\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\n    if (!phonePattern.test(number)) {\n      swal('Error', 'Invalid phone number', 'error');\n      reset();\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  return (\n    <ContactsBlock>\n      <ContactPhonebook>\n        Phonebook\n        <BsFillTelephoneFill />\n      </ContactPhonebook>\n      <ContactBook onSubmit={handleSubmit}>\n        <label htmlFor={nameId}>Name</label>\n        <ContactForm\n          placeholder=\"ім'я\"\n          id={nameId}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <label htmlFor={numberId}>Number</label>\n        <ContactForm\n          placeholder=\"телефон\"\n          id={numberId}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        <ContactAdd type=\"submit\">Add contact</ContactAdd>\n      </ContactBook>\n    </ContactsBlock>\n  );\n}\n\nexport default Form;\n","export const getFilter = ({ filter }) => filter;\n","import styled from 'styled-components';\n\nexport const ContactSearch = styled.input`\n  padding: 10px;\n  font-size: 24px;\n  border: none;\n  background-color: #f1f1f1;\n  border-radius: 5px;\n  max-width: 500px;\n  width: 100%;\n  display: block;\n  box-sizing: border-box;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 100px;\n  &:focus,\n  :hover {\n    outline: none;\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3);\n    background-color: rgb(173, 255, 173);\n  }\n`;\nexport const ContactFind = styled.label`\n  display: block;\n  text-align: center;\n  font-size: 24px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../../store/filter/selectors';\nimport { setFilter } from '../../../store/filter/slice';\n\nimport { ContactSearch } from './Search.styled';\nimport { ContactFind } from './Search.styled';\n\nconst Search = () => {\n  const dispatch = useDispatch();\n\n  const filterQuery = useSelector(getFilter);\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value.trim()));\n  };\n\n  return (\n    <div>\n      <ContactFind>\n        Find contacts\n        <ContactSearch\n          placeholder=\"кого шукаємо...\"\n          type=\"text\"\n          name=\"filter\"\n          value={filterQuery}\n          onChange={changeFilter}\n        />\n      </ContactFind>\n    </div>\n  );\n};\n\nexport default Search;\n","import { ThreeDots } from 'react-loader-spinner';\nconst Loader = props => {\n  return (\n    <ThreeDots\n      hheight=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#f00\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{\n        margin: '0 auto',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      secondaryColor=\"#000\"\n      strokeWidth={2}\n      strokeWidthSecondary={2}\n    />\n  );\n};\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const ContactBox = styled.div`\n  width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Contact = styled.p`\n  font-size: 50px;\n  font-weight: bold;\n`;\nexport const ContactList = styled.ul`\n  font-size: 32px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\nexport const ContactItem = styled.li`\n  background-color: #f2f2f2;\n  padding: 10px;\n  display: flex;\n  &:nth-child(2n) {\n    background-color: #ffffff;\n  }\n`;\n\nexport const ContactButton = styled.button`\n  background-color: #ff0000;\n  color: #ffffff;\n  border: none;\n  padding: 5px 10px;\n  margin-left: 10px;\n  cursor: pointer;\n  margin-left: auto;\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BsTrash } from 'react-icons/bs';\n\nimport {\n  getError,\n  getFilteredContacts,\n  getIsLoading,\n} from '../../../store/contacts/selectors';\n\nimport { fetchContacts, deleteContact } from '../../../store/contacts/operations';\nimport Loader from '../Loader';\n\nimport {\n  ContactBox,\n  Contact,\n  ContactList,\n  ContactItem,\n  ContactButton,\n} from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const filteredContacts = useSelector(getFilteredContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ContactBox>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      {filteredContacts.length > 0 && !error && (\n        <>\n          <Contact>Contacts</Contact>\n          <ContactList>\n            {filteredContacts.map(({ id, name, number }) => (\n              <ContactItem key={id}>\n                <p>\n                  {name} : {number}\n                </p>\n                <ContactButton onClick={() => handleDeleteContact(id)}><BsTrash />\n                </ContactButton>\n              </ContactItem>\n            ))}\n          </ContactList>\n        </>\n      )}\n    </ContactBox>\n  );\n};\n\nexport default Contacts;\n","import Form from './Form/Form';\nimport Search from './Search/Search';\nimport Contacts from './Contacts/Contacts';\n\nfunction Phonebook() {\n  return (\n    <section>\n      <Form />\n      <Search />\n      <Contacts />\n    </section>\n  );\n}\n\nexport default Phonebook;","import Phonebook from 'components/Phonebook/Phonebook';\nimport { Container } from '@mui/material';\n\nexport default function Contacts() {\n  return (\n    <Container>\n      <Phonebook />\n    </Container>\n  );\n}\n"],"names":["ContactsBlock","styled","ContactPhonebook","ContactBook","ContactForm","ContactAdd","dispatch","useDispatch","contacts","useSelector","state","items","useState","name","setName","number","setNumber","reset","handleChange","event","target","value","nameId","nanoid","numberId","onSubmit","preventDefault","find","contact","toLowerCase","swal","test","addContact","htmlFor","placeholder","id","type","onChange","pattern","title","required","getFilter","filter","ContactSearch","ContactFind","filterQuery","e","setFilter","trim","props","hheight","width","radius","color","ariaLabel","wrapperStyle","margin","display","alignItems","justifyContent","wrapperClass","visible","secondaryColor","strokeWidth","strokeWidthSecondary","ContactBox","Contact","ContactList","ContactItem","ContactButton","filteredContacts","getFilteredContacts","isLoading","getIsLoading","error","getError","useEffect","fetchContacts","length","map","onClick","deleteContact","handleDeleteContact","Contacts","Container"],"sourceRoot":""}